Network Connection


============Android lets your application connect to the internet===================
 or any other local network and allows you to perform network operations.
==============================================================================

========================Checking Network Connection=======================
Before you perform any network operations, you must first check that are you connected to that network or internet e.t.c. For this android provides ConnectivityManager class. 
You need to instantiate an object of this class by calling getSystemService() 

=====
ConnectivityManager check = (ConnectivityManager) 
this.context.getSystemService(Context.CONNECTIVITY_SERVICE); 


=================

nce you instantiate the object of ConnectivityManager class,
 you can use getAllNetworkInfo method to get the information of all the networks. 
This method returns an array of NetworkInfo. So you have to receive it like this


NetworkInfo[] info = check.getAllNetworkInfo();


he last thing you need to do is to check Connected State of the network



for (int i = 0; i<info.length; i++){

   if (info[i].getState() == NetworkInfo.State.CONNECTED){
      Toast.makeText(context, "Internet is connected  " ,Toast.LENGTH_SHORT).show();
   }

}


==============

1	Connecting
2	Disconnected
3	Disconnecting
4	Suspended
5	Unknown



==================Performing Network Operations===============

After checking that you are connected to the internet, you can perform any network operation.
 Here we are fetching the html of a website from a url.

Android provides HttpURLConnection and URL class to handle these operations. 
You need to instantiate an object of URL class by providing the link of website. 

String link = "http://www.google.com";
URL url = new URL(link)


============

After that you need to call openConnection method of
 url class and receive it in a HttpURLConnection object.
 After that you need to call the connect method of HttpURLConnection class

===============

HttpURLConnection conn = (HttpURLConnection) url.openConnection();
conn.connect();	


InputStream is = conn.getInputStream();

BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));

String webPage = "",data="";

while ((data = reader.readLine()) != null){
   webPage += data + "\n";
}

===================================================/=============================


1	disconnect()

		This method releases this connection so that its resources may be either reused or closed

2	getRequestMethod()

		This method returns the request method which will be used to make the request to the remote HTTP server

3	getResponseCode()

		This method returns response code returned by the remote HTTP server

4	setRequestMethod(String method)

		This method Sets the request command which will be sent to the remote HTTP server

5	usingProxy()

		This method returns whether this connection uses a proxy server or not


=============================

<?xml version="1.0" encoding="utf-8"?>

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/logob"
    tools:context="com.zaaviyah.zaaviyah_networkconnection.MainActivity">


    <TextView
        android:id="@+id/textView"
        android:layout_width="match_parent"
        android:layout_height="45dp"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_alignParentTop="true"
        android:layout_marginTop="25dp"
        android:text="Network Connection"
        android:textColor="@color/colorPrimary"
        android:textSize="35dp" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="match_parent"
        android:layout_height="45dp"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_below="@+id/textView"
        android:layout_marginTop="41dp"
        android:text="ZAAVIYAH SOLUTIONS"
        android:textColor="@color/colorPrimary"
        android:textSize="35dp" />

    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/imageView"
        android:layout_below="@+id/textView2"
        android:layout_centerHorizontal="true" />

    <Button
        android:id="@+id/button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/colorPrimaryDark"
        android:text="Save"
        android:textColor="@color/colorPrimary"
        android:textStyle="bold"
        android:layout_alignParentBottom="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_marginBottom="66dp" />
</RelativeLayout>
==================


package com.zaaviyah.zaaviyah_networkconnection;

import android.app.ProgressDialog;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.ConnectivityManager;
import android.net.wifi.aware.DiscoverySession;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

public class MainActivity extends AppCompatActivity {

    private ProgressDialog progressDialog;
    private Bitmap bitmap = null;
    Button b1;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

     b1= (Button) findViewById(R.id.button) ;

        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // NEWT WORKING POINT HERER

                checkInternetConenction();
                downloadImage("http://zaaviyah.com/img/shahlogo.png");

            }
        });

    }

    private void downloadImage (String urlStr ) {


        progressDialog = ProgressDialog.show(this, "", "Downloading Image from " + urlStr);
        final String url = urlStr;

        new Thread() {
            public void run() {
                InputStream in = null;

                Message msg = Message.obtain();
                msg.what = 1;

                try {
                    in = openHttpConnection(url);
                    bitmap = BitmapFactory.decodeStream(in);
                    Bundle b = new Bundle();
                    b.putParcelable("bitmap", bitmap);
                    msg.setData(b);
                    in.close();
                }catch (IOException e1) {
                    e1.printStackTrace();
                }
                messageHandler.sendMessage(msg);
            }
        }.start();

    }


    private InputStream openHttpConnection(String urlStr) {
        InputStream in = null;
        int resCode = -1;

        try {
            URL url = new URL(urlStr);
            URLConnection urlConn = url.openConnection();

            if (!(urlConn instanceof HttpURLConnection)) {
                throw new IOException("URL is not an Http URL");
            }

            HttpURLConnection httpConn = (HttpURLConnection) urlConn;
            httpConn.setAllowUserInteraction(false);
            httpConn.setInstanceFollowRedirects(true);
            httpConn.setRequestMethod("GET");
            httpConn.connect();
            resCode = httpConn.getResponseCode();

            if (resCode == HttpURLConnection.HTTP_OK) {
                in = httpConn.getInputStream();
            }
        }catch (MalformedURLException e) {
            e.printStackTrace();
        }catch (IOException e) {
            e.printStackTrace();
        }
        return in;
    }

    private Handler messageHandler = new Handler() {
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            ImageView img = (ImageView) findViewById(R.id.imageView);
            img.setImageBitmap((Bitmap) (msg.getData().getParcelable("bitmap")));
            progressDialog.dismiss();
        }
    };

    private boolean checkInternetConenction() {
        // get Connectivity Manager object to check connection
        ConnectivityManager connec =(ConnectivityManager)getSystemService(getBaseContext().CONNECTIVITY_SERVICE);

        // Check for network connections
        if ( connec.getNetworkInfo(0).getState() ==android.net.NetworkInfo.State.CONNECTED ||
connec.getNetworkInfo(0).getState() ==android.net.NetworkInfo.State.CONNECTING ||
                connec.getNetworkInfo(1).getState() ==
                        android.net.NetworkInfo.State.CONNECTING ||
                connec.getNetworkInfo(1).getState() == android.net.NetworkInfo.State.CONNECTED ) {

            Toast.makeText(this, " Connected ", Toast.LENGTH_LONG).show();
            return true;
        }else if (

                connec.getNetworkInfo(0).getState() == android.net.NetworkInfo.State.DISCONNECTED ||
                        connec.getNetworkInfo(1).getState() ==
                                android.net.NetworkInfo.State.DISCONNECTED  ) {
            Toast.makeText(this, " Not Connected ", Toast.LENGTH_LONG).show();
            return false;
        }
        return false;
    }
}

=============






Its syntax is as follows
